sourceCompatibility = 1.7
sourceSets.main.java.srcDirs = [ "src/" ]
sourceSets.main.resources.srcDirs = ["../android/assets"]

project.ext.mainClassName = "com.spaiowenta.joystick.desktop.DesktopLauncher"
project.ext.assetsDir = new File("../android/assets")

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    debug = true
}

task dist(type: Jar) {
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}


dist.dependsOn classes

eclipse.project.name = appName + "-desktop"

import com.badlogic.gdx.tools.texturepacker.TexturePacker

task texturePacker {
    doLast {
        TexturePacker.process("assets.src/", "android/assets/", "main")
    }
}

apply plugin: "org.hidetake.ssh"
remotes {
    testServer {
        host = '134.249.111.57'
        user = 'user1'
        identity = file(System.properties['user.home'] + '/.ssh/id_rsa')
    }
}

task deployToTestServer {
	dependsOn dist
    doLast {
        ssh.run {
            session(remotes.testServer) {
                put from: buildDir.path + "/libs/desktop-1.0.jar", into: 'files/desktop.jar'
            }
        }

    }
}

